

<style>

    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 360px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }



    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    #container {
        height: 400px;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }



    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 320px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }

    input[type="number"] {
        min-width: 50px;
    }

</style>



<div id="vc_app">
    <div class="container-fluid p-3">
        <div class="row">
            <div class="col-lg-3 col-xs-6">

                <div class="small-box" style="background-color : aliceblue">
                    <div class="inner">
                        <h3>400</h3>
                        <p class="fw-bold">Total TCL </p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                    <a href="#" class="small-box-footer" style="color:black">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>

            <div class="col-lg-3 col-xs-6">

                <div class="small-box">
                    <div class="inner">
                        <h3>350</h3>
                        <p>Total AOF </p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                    <a href="#" class="small-box-footer" style="color:black">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>

            <div class="col-lg-3 col-xs-6">

                <div class="small-box" style="background-color : aliceblue">
                    <div class="inner">
                        <h3>5</h3>
                        <p>Total Document</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="#" class="small-box-footer" style="color:black">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>

            <div class="col-lg-3 col-xs-6">

                <div class="small-box" style="background-color : cornsilk">
                    <div class="inner">
                        <h3>7</h3>
                        <p>Total Limit</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="#" class="small-box-footer" style="color:black">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>

        </div>



        <div class="card mt-2" v-cloak>

            <div class="card-body">

                <div class="col-md-12">
                    <div class="button-container">
                        <div class="input-group input-group-sm" style="width: 1000px; margin-left: 1px;">

                            <div class="input-group-prepend">
                                <label class="input-group-text" for="">Department</label>
                            </div>

                            <select class="custom-select" id="DepartmentId" v-model="selectedPIEDepartment" @@change="Onchange()">
                                <option value="1">EBL Migration</option>
                                <option value="2">EBL POC</option>
                            </select>

                            <div class="input-group-prepend">
                                <label class="input-group-text" for="">Category</label>
                            </div>
                            <select class="custom-select" id="CategoryId" v-model="selectedCategory">
                                <option value="0">Select From List</option>
                                <option value="DOCClass">Document Class</option>
                                <option value="Status">Status</option>
                                <option value="MCIF">CIF</option>
                            </select>

                            <div class="input-group-prepend">
                                <label class="input-group-text" for="">From Date</label>
                            </div>
                            <input type="date" class="form-control" placeholder="From Date" required>

                            <div class="input-group-prepend">
                                <label class="input-group-text" for="">To Date</label>
                            </div>
                            <input type="date" class="form-control" placeholder="To Date" required>

                            <div class="input-group-prepend">

                                <button type="button" class="btn btn-outline-info btn-sm" @@Click="getDta()">Search</button>
                            </div>

                        </div>
                    </div>
                </div>

            </div>

        </div>

         <div class="card mt-2" v-cloak>
             <div class="card-body">

                <div class="col-md-6">
                    <figure class="highcharts-figure">
                        <div id="container"></div>
                    </figure>
                </div>

                <div class="col-md-6">
                    <figure class="highcharts-figure">
                        <div id="container_"></div>
                    </figure>
                </div>

             </div>
         </div>



        <div class="card mt-2" v-cloak>

            <div class="card-body">

                <div class="col-12">
                 
                        <div class="button-container">

                            <div class="input-group input-group-sm" style="width: 1000px; margin-left: 1px;">

                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="">Department</label>
                                </div>


                            <select class="custom-select" id="DepartmentId" v-model="selectedDepartment" @@change="Onchange()">
                                <option value="1">EBL Migration</option>
                                <option value="2">EBL POC</option>
                            </select>



                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="balanceSheetDropdown">Document Class</label>
                                </div>
                            @*     <select class="custom-select" id="DocClassId" v-model="SelectDocClassType">
                                    <option value="0">Select Doc Class</option>
                                    <option value="NEWDOC">NEWDOC</option>
                                    <option value="NEWREQUEST">NEWREQUEST</option>
                                    <option value="COMPLETED">COMPLETED</option>
                                </select> *@

                            <select v-model="SelectDocClassType" class="custom-select">
                                <option v-for="item in portalList" :key="item.datA_CLASS" :value="item.datA_CLASS">
                                    {{ item.datA_CLASS }}
                                </option>
                            </select>


                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="balanceSheetDropdown">Status</label>
                                </div>
                                <select class="custom-select" id="gameTypeId" v-model="selectedGameType">
                                    <option value="0">Select Status</option>
                                    <option value="NEWDOC">NEWDOC</option>
                                    <option value="NEWREQUEST">NEWREQUEST</option>
                                    <option value="COMPLETED">COMPLETED</option>

                                </select>


                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="balanceSheetDropdown">From Date</label>
                                </div>
                                <input type="date" class="form-control" placeholder="From Date" required >

                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="balanceSheetDropdown">To Date</label>
                                </div>
                                <input type="date" class="form-control" placeholder="To Date" required >

                                <div class="input-group-prepend">

                                <button type="button" class="btn btn-outline-info btn-sm" @@Click="getData()">Search</button>
                                </div>
                            
                            </div>


                            </div>
                    
                </div>

            </div>

        </div>

        <div class="card mt-2" v-cloak>
            <div class="card-body">

                <div class="col-12" id="OnlinegameLstId" v-if="selectedDepartment==1">
                  
                    <div class="row">

                        <div class="col-md-5">
                            <h4>EBL Migration List</h4>
                        </div>
                        <div class="col-md-4">
                            <button v-on:click="exportToExcel" class="btn btn-outline-info btn-sm">Excel</button>
                            <button id="downloadPdf" class="btn btn-outline-info btn-sm">PDF</button>
                            <button id="EamilSend" class="btn btn-outline-info btn-sm" @@click="SendMain">Mail</button>
                        </div>

                    </div>

                    <div style="overflow-x: auto;">

                        <table class="table table-bordered table-striped" id="gameTable" style="table-layout: fixed;">

                            <thead>
                                <tr>
                                    <th>Document Store Date</th>
                                    <th>Account NO</th>
                                    <th>Product Type</th>
                                    <th>Document Type</th>
                                    <th>Status </th>
                                    <th>Migration Create Date</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="game in filteredGames" :key="game.DWDOCID">
                                    <td>{{ game.dwstoredatetime }}</td>
                                    <td>{{ game.accounT_NO }}</td>
                                    <td>{{ game.producT_TYPE }}</td>
                                    <td>{{ game.documenT_TYPE }}</td>
                                    <td>{{ game.status }}</td>
                                    <td>{{ game.m_CREATED_DATE }}</td>

                                </tr>
                            </tbody>
                        </table>


                    </div>


                </div>

                <div class="col-12" id="OnlinegameLstId" v-if="selectedDepartment==2">

                    <div class="row">

                        <div class="col-md-5">
                            <h4>EBL POC List</h4>
                        </div>
                        <div class="col-md-4">
                            <button v-on:click="exportToExcelPOC" class="btn btn-outline-info btn-sm">Excel</button>
                            <button id="downloadPdf" class="btn btn-outline-info btn-sm">PDF</button>
                            <button id="EamilSende" class="btn btn-outline-info btn-sm" @@click="SendMain">Mail</button>
                        </div>

                    </div>


                    <div style="overflow-x: auto;">
                                      
                        <table class="table table-bordered table-striped" id="gameTable" style="table-layout: fixed;">

                            <thead>
                                <tr>
                                    <th>Document Store Date</th>
                                    <th>Account NO</th>
                                    <th>Product Type</th>
                                    <th>Document Class</th>
                                    <th>Status </th>
                                    <th>WF_CREATOR</th>
                                    <th>WF_CREATOR_COMMENTS</th>
                                    <th>WF_MAKER</th>
                                    <th>WF_MAKER_COMMENTS</th>
                                    <th>WF_CHECKER</th>
                                    <th>WF_CHECKER_COMMENTS</th>
                                    <th>WF_MANAGER</th>
                                    <th>WF_MANAGER_COMMENTS</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="game in filteredGames" :key="game.DWDOCID">
                                    <td>{{ game.dwstoredatetimE_ }}</td>
                                    <td>{{ game.accounT_NO }}</td>
                                    <td>{{ game.producT_TYPE }}</td>
                                    <td>{{ game.datA_CLASS }}</td>
                                    <td>{{ game.status }}</td>             
                                    <td>{{ game.wF_CREATOR }}</td>
                                    <td>{{ game.wF_CREATOR_COMMENTS }}</td>
                                    <td>{{ game.wF_MAKER }}</td>
                                    <td>{{ game.wF_MAKER_COMMENTS }}</td>
                                    <td>{{ game.wF_CHECKER }}</td>
                                    <td>{{ game.wF_CHECKER_COMMENTS }}</td>
                                    <td>{{ game.wF_MANAGER }}</td>
                                    <td>{{ game.wF_MANAGER_COMMENTS }}</td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>

            </div>
        </div>



        @* Modal Start Hare *@

        <div class="modal" id="mdl_game" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Mail  Box</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-12">
                                <form action="javascript:;" data-vv-scope="frmgame">

                          
                                    <div class="form-row">

                                        <div class="row col-12">

                                            <div class="col">

                                                <template>
                                                    <div>
                                                        <div class="input-group mb-3">
                                                            <div class="input-group-prepend">
                                                                <span style="font-size: 14px" class="input-group-text">Mail</span>
                                                            </div>
                                                                                                    
                                                            <select v-model="selectedEblEmployee" class="custom-select">
                                                                <option v-for="item in EmployeeInfo" :key="item.email" :value="item.email">
                                                                    {{ item.name }}
                                                                </option>
                                                            </select>

                                                        </div>

                                                    </div>
                                                </template>

                                            </div>

                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" v-on:click="SubmitMail"><i class="fa fa-envelope"></i> Send</button>
                    </div>
                </div>
            </div>
        </div>



    </div>

</div>



@section scripts {

    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>

    <script>


        var app = new Vue({

            el: '#vc_app',
            data() {
                return {
                    selectedEblEmployee: 'admin@petersengineering.com',
                    selectedPIEDepartment:'',
                    portalList: [],
                    EmployeeInfo: [],
                    selectedCategory:'',
                    selectedGameType: '0',
                    selectedDepartment:'1',
                    SelectDocClassType: '',
                    typeSelected: '',
                    games: [],
                    gateCategoryList: [],
                    searchTerm: '',
                    itemG: {},
                    isActiveChecked: false,
                    datatableOptions: {
                        searching: true,
                        paging: true,
                        lengthChange: false,
                        ordering: true,
                        info: false,
                        responsive: true,
                    },
                    filteredGames: [],
                    PiE: [],
                    BarChartZ: [],

                    LineChart: [],
                    dataa: [],
                    selectedFile: null,
                    xlsxLoaded: false,
                    jsPDFLoaded: false
                    

                };
            },

            computed: {

            },
            methods: {

                SendMain() {
                    this.itemG = {};
                    $('#mdl_game').modal('show');
                },

                exportToExcel() {
                    if (!this.xlsxLoaded) return; // Check if XLSX library is loaded
                    const wb = XLSX.utils.book_new();
                    const ws = XLSX.utils.json_to_sheet(this.filteredGames);
                    XLSX.utils.book_append_sheet(wb, ws, 'People');
                    XLSX.writeFile(wb, 'Eastern_Bank_PLC_Migration.xlsx');
                },

                exportToExcelPOC() {
                    if (!this.xlsxLoaded) return; // Check if XLSX library is loaded
                    const wb = XLSX.utils.book_new();
                    const ws = XLSX.utils.json_to_sheet(this.filteredGames);
                    XLSX.utils.book_append_sheet(wb, ws, 'People');
                    XLSX.writeFile(wb, 'Eastern_Bank_PLC_POC.xlsx');
                },

                
                Onchange() {
                    DepartmentId = this.selectedDepartment;
                    if (DepartmentId=="1"){
                        helper.get('api/EBL_Migration/EblDataClassPopulate',
                            { DepartmentId: DepartmentId },
                            (response) => {
                                this.portalList = [];
                                this.portalList = response;
                                
                                
                            });
                    }
                    if (DepartmentId == "2") {
                        helper.get('api/EBL_Migration/EblDataClassPopulate',
                            { DepartmentId: DepartmentId },
                            (response) => {
                                this.portalList = [];
                                this.portalList = response;          
                            });
                    }                  
                },

                GetEmployeeMailInfo() {

                    helper.get('api/EBLLogin/EBLEmployeeInfo',
                        { },
                        (response) => {
                            this.EmployeeInfo = [];
                            this.EmployeeInfo = response;
                            console.log(this.EmployeeInfo);
                        });
                
                },

                getDta() {


                    PieDepartment = this.selectedPIEDepartment;
                    CategoryType = this.selectedCategory;

                    helper.get('api/EBL_Migration/PIEChart',
                        { Department: PieDepartment, type: CategoryType },
                        (response) => {
                            this.PiE = [];
                            this.PiE = response;
                            console.log(this.PiE);

                            Highcharts.chart('container', {
                                chart: {
                                    type: 'pie'
                                },
                                title: {
                                    text: '',
                                    align: 'left'
                                },
                                tooltip: {
                                    valueSuffix: '%'
                                },

                                plotOptions: {
                                    series: {
                                        allowPointSelect: true,
                                        cursor: 'pointer',
                                        dataLabels: [{
                                            enabled: true,
                                            distance: 20
                                        }, {
                                            enabled: true,
                                            distance: -40,
                                            format: '{point.percentage:.1f}%',
                                            style: {
                                                fontSize: '1.2em',
                                                textOutline: 'none',
                                                opacity: 0.7
                                            },
                                            filter: {
                                                operator: '>',
                                                property: 'percentage',
                                                value: 10
                                            }
                                        }]
                                    }
                                },
                                series: [
                                    {
                                        name: 'Percentage',
                                        colorByPoint: true,
                                        data: this.PiE
                                    }
                                ]
                            });
                      
                        });

                    helper.get('api/EBL_Migration/BarChartForDashBoard',
                        { Department: PieDepartment, type: CategoryType },
                        (response) => {
                            this.BarChartZ = [];
                            this.BarChartZ = response;
                        
                            Highcharts.chart('container_', {
                                chart: {
                                    type: 'column'
                                },
                                title: {
                                    text: '',
                                    align: 'left'
                                },
                                xAxis: {
                                    categories: [],
                                    crosshair: true,
                                    accessibility: {
                                        description: 'Countries'
                                    }
                                },
                                yAxis: {
                                    min: 0,
                                    title: {
                                        text: ''
                                    }
                                },
                                tooltip: {
                                    valueSuffix: ' '
                                },
                                plotOptions: {
                                    column: {
                                        pointPadding: 0.2,
                                        borderWidth: 0
                                    }
                                },
                                series: this.BarChartZ
                            });

                        });
                    
                },
                                
               
               
                getData() {

                    const DepartmetId = this.selectedDepartment;
                    const gameTypeId = this.selectedGameType;
                    const DepartmentId = this.selectedDepartment;
                    const DocClass = this.SelectDocClassType;

                    if (DepartmetId == 1) {

                        helper.get('api/EBL_Migration/MigrationList',
                            { DocClass: DocClass, status: gameTypeId, FromDate: null, Todate: null },
                            (response) => {

                                this.filteredGames = response;
                                console.log(this.filteredGames);
                            });
                    }

                    if (DepartmetId == 2) {

                        helper.get('api/EBL_Migration/EBLPOCList',
                            { DocClass: DocClass, status: gameTypeId, FromDate: null, Todate: null },
                            (response) => {

                                this.filteredGames = response;
                                console.log(this.filteredGames);
                            });
                    }
                },


                SubmitMail() {

                    // if (this.EmployeeInfo == null) {
                    //     $.notify("There is no data in the below list", 'error');
                    //     return;
                    // }

                    const mailAddress = this.selectedEblEmployee;

                    // helper.post('api/EBL_Migration/MailGenerator', mailAddress, (response) => {
                    //     if (response) {
                    //         $('#mdl_game').modal('hide');
                    //         $.notify(response.message, 'success');
                     
                    //     }
                    //     else {
                    //         $.notify(response.message, 'error');
                    //     }
                    // });

                    helper.get('api/EBL_Migration/MailGenerator',
                        { mailAddress: mailAddress},
                        (response) => {

                            if (response) {
                                $('#mdl_game').modal('hide');
                                $.notify(response.message, 'success');

                            }
                            else {
                                $.notify(response.message, 'error');
                            }
                        });
                }          

            },
            mounted() {
                //  this.getData();

                helper.blockUI();
                helper.unBlockUI();

                // this.getData();

                const script = document.createElement('script');
                script.src = 'https://cdn.jsdelivr.net/npm/xlsx@0.18.2/dist/xlsx.full.min.js';
                script.onload = () => {
                    this.xlsxLoaded = true; // Set flag to true when script is loaded
                };
                document.head.appendChild(script);

                this.Onchange();
                this.GetEmployeeMailInfo();
            },

        });

    </script>











}